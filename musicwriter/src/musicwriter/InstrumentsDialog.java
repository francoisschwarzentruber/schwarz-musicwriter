/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InstrumentsDialog.java
 *
 * Created on 18 janv. 2010, 20:01:13
 */

package musicwriter;

import javax.swing.DefaultListModel;

/**
 *
 * @author Ancmin
 */
public class InstrumentsDialog extends javax.swing.JDialog {

    DefaultListModel instruments = new DefaultListModel();
    private Instrument instrument;
    /** Creates new form InstrumentsDialog */
    public InstrumentsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        instruments.add(0, new Instrument(0));
        instruments.add(1, new Instrument(6));
        instruments.add(2, new Instrument(22));
        instruments.add(2, new Instrument(40));
        instruments.add(2, new Instrument(46));
        instruments.add(2, new Instrument(47));
        instruments.add(3, new Instrument(57));
        instruments.add(2, new Instrument(60));
        instruments.add(4, new Instrument(71));
        instruments.add(5, new Instrument(73));
        jListInstruments.setCellRenderer(new InstrumentCellRenderer());
        jListInstruments.setModel(instruments);
    }

    public Instrument getInstrument()
    {
        return instrument;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jListInstruments = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(musicwriter.MusicwriterApp.class).getContext().getResourceMap(InstrumentsDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setMinimumSize(new java.awt.Dimension(400, 600));
        setName("Form"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jListInstruments.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jListInstruments.setDragEnabled(true);
        jListInstruments.setName("jListInstruments"); // NOI18N
        jListInstruments.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListInstrumentsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jListInstruments);

        getContentPane().add(jScrollPane2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListInstrumentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListInstrumentsMouseClicked
            if(jListInstruments.getSelectedIndex() >= 0)
                instrument = (Instrument) instruments.get(jListInstruments.getSelectedIndex());
            else
                instrument = null;
            setVisible(false);
    }//GEN-LAST:event_jListInstrumentsMouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InstrumentsDialog dialog = new InstrumentsDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList jListInstruments;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

}
